<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       id="install-datalore-on-premises-using-docker"
       title="Install Datalore On-Premises in Docker containers using Docker Compose">
  <show-structure for="chapter,def,procedure" />
  <title>Install Datalore On-Premises in Docker containers using Docker Compose</title>
  <p>
    This page guides you through installing and configuring Datalore On-Premises
    in a Docker container with Docker Compose on the platform of your choice.
  </p>
  <p>
    This is the recommended way to install Datalore unless you specifically need to use Kubernetes.
  </p>
  <tip>
    <p>
      If you're still undecided about which platform or service to choose,
      we recommend installing Datalore On-Premises on an AWS EC2 instance.
    </p>
    <p>
      To learn how to create deploy applications in AWS, see
      <a href="https://aws.amazon.com/getting-started/guides/deploy-webapp-ec2/">Deploy a web app on EC2</a>.
    </p>
  </tip>
  <p>The installation process consists of two parts:</p>
  <list>
    <li>
      <p>
        <a href="#basic-datalore-installation_docker">Basic installation</a>:
        to get Datalore On-Premises up and running on the platform of your choice.
      </p>
    </li>
    <li>
      <p>
        <a href="https://www.jetbrains.com/help/datalore/configuration-procedures-docker.html">
          Configuration procedures
        </a>:
        to customize the installation.
        Some of these configurations are necessary to begin using Datalore after installation.
      </p>
    </li>
  </list>
  <include from="snippets.topic" element-id="supported-platforms" />
  <deflist>
    <def title="Prerequisites" id="prerequisites">
      <p>Before installation, make sure that you have the following:</p>
      <list>
        <li>Docker</li>
        <li>
          <p>Docker Compose v2</p>
          <tip>
            <p>To check the Docker Compose version, run the following command:</p>
            <code-block lang="Bash">
              docker compose version
            </code-block>
          </tip>
        </li>
      </list>
      <note>
        If you're using a reverse proxy, we recommend that you enable Gzip compression by following
        <a href="https://nginx.org/en/docs/http/ngx_http_gzip_module.html">these instructions</a>.
      </note>
    </def>
    <def title="Hardware requirements" id="hardware-requirements">
      <p>
        Datalore On-Premises requires resources for running both the server, database, and computations.
        When choosing the amount of resources,
        take into account your projected computations and the number of agents working in parallel.
      </p>
      <list>
        <li>Datalore server machine: 4GB of RAM (the number of CPU is irrelevant if the load is not high)</li>
        <li>For every concurrently run notebook: from 4GB of RAM</li>
        <li>
          <p>PostgreSQL <b>15</b> database:</p>
          <list>
            <li>CPU: minimum 1 core; 2 or more cores recommended</li>
            <li>RAM: minimum 4 GB; 8 GB recommended</li>
            <li>Available memory: minimum 4 GB minimum, 6GB or more recommended</li>
          </list>
        </li>
      </list>
    </def>
  </deflist>
  <chapter title="Basic Datalore installation" id="basic-datalore-installation_docker">
    <warning>
      <p>
        When customizing the deployment, donâ€™t change the user for the datalore-server container, or the deployment might not work correctly.
      </p>
    </warning>
    <procedure title="Install Datalore" id="install-datalore">
      <step>
        Download and open the <path>docker-compose.yaml</path> file from the
        <a href="https://github.com/JetBrains/datalore-configs/tree/2025.1/docker-compose"> datalore-configs repository</a>.
      </step>
      <step>
        Set the same random string for both <code>DB_PASSWORD</code> and <code>POSTGRES_PASSWORD</code> properties.
        This string will serve as your database password, so keep it secret.
      </step>
      <step>
        <p>Run the following command and wait for Datalore to start up:</p>
        <code-block lang="bash">
          docker compose up
        </code-block>
      </step>
      <step>
        <p>
          Go to <path>http://127.0.0.1:8080/</path> and register the first user.
          This user automatically receives the Super Admin role.
        </p>
        <tip>
          Unless the email service is configured, Datalore On-Premises sends no registration confirmation.
          You can log in right after you register.
        </tip>
      </step>
      <step>
        <p>
          Add your licence. To do that, click your avatar in the upper right corner,
          select <ui-path>Admin panel | License</ui-path>, and enter your license key.
        </p>
        <img src="admin_panel.png" alt="Opening Admin panel" width="296" />
      </step>
    </procedure>
  </chapter>
  <chapter title="Optional procedures" id="optional-procedures">
    <procedure title="Add public URL" type="steps" id="add-public-url">
      <step>
        <p>
          To access Datalore using an address other than <path>127.0.0.1</path>,
          add a URL without a trailing slash as the <code>DATALORE_PUBLIC_URL</code> parameter
          in the <path>datalore.values.yaml</path> file.
        </p>
        <p>
          For example, if you want to use <path>https://datalore.yourcompany.com</path>, add the following block:
        </p>
        <code-block lang="yaml">
          dataloreEnv:
            ...
            # Make sure the URL doesn't have a trailing slash
            DATALORE_PUBLIC_URL: "https://datalore.yourcompany.com"
        </code-block>
        <note>
          You need to configure your DNS yourself.
        </note>
      </step>
    </procedure>
    <procedure title="Use an external postgres database" id="use-an-external-postgres-database">
      <step>
        <p>In the <path>docker-compose.yaml</path> file, add the following variables under <code>environment</code>:</p>
        <code-block lang="yaml">
            environment:
              ...
              DB_USER: "&lt;database_user&gt;"
              DB_URL: "jdbc:postgresql://[database_host]:[database_port]/[database_name]
        </code-block>
        <tip>
          Make sure the <code>DB_PASSWORD</code> parameter contains the password for the specified database.
        </tip>
      </step>
      <step>
        <p>In the same file, remove the following block:</p>
        <code-block lang="yaml">
          postgresql:
            image: jetbrains/datalore-postgres:2024.4
            expose: [ "5432" ]
            networks:
              - datalore-backend-network
            volumes:
              - "postgresql-data:/var/lib/postgresql/data"
            environment:
              POSTGRES_PASSWORD: "changeme"
        </code-block>
      </step>
      <step>Remove <code>postgresql-data: { }</code> from under <code>volumes:</code>.</step>
    </procedure>
    <procedure title="Enable an email allowlist" type="steps" id="enable-an-email-allowlist">
      <p>
        Enable an allowlist for new user registration.
        Only users with email addresses included in the allowlist can register.
      </p>
      <step><p>In the <path>docker-compose.yaml</path> file, add the following parameter:</p>
        <code-block lang="yaml">
        environment:
          EMAIL_ALLOWLIST_ENABLED: &quot;true&quot;
        </code-block>
      </step>
      <p>
        The <ui-path>Email allowlist</ui-path> tab will be available on the
        <a href="https://www.jetbrains.com/help/datalore/manage-email-allowlist.html">Admin panel</a>.
      </p>
    </procedure>
    <procedure title="Enable user filtration based on Hub group membership"
               id="enable-user-filtration-based-on-hub-group-membership">
      <p>
        By default, all Hub users can register unless you disable registration on the
        <a href="https://www.jetbrains.com/help/datalore/manage-users.html">Admin panel</a>.
        To grant Datalore access only to a specific Hub group members:
      </p>
      <step><p>In the <path>docker-compose.yaml</path> file, add the following parameter:</p>
        <code-block lang="yaml">
        environment:
          HUB_ALLOWLIST_GROUP: 'group_name'
        </code-block>
      </step>
    </procedure>
    <procedure title="Configure notebook code import limit" type="steps" id="configure-notebook-code-import-limit">
      <p> You can configure the limit of notebook code import by setting your own value in bytes. To do that:</p>
      <step><p>In the <path>docker-compose.yaml</path> file, add the following parameter:</p>
        <code-block lang="yaml">
        environment:
          VFS_MAX_IMPORT_SOURCE_LENGTH: 'integer, prefixes (K-, M-, etc.) not supported'
        </code-block>
      </step>
    </procedure>
  </chapter>
  <chapter title="Fargate restrictions" id="fargate-restrictions">
    <p>AWS Fargate is a serverless compute engine for containers.
      Datalore On-Premises can run in Fargate, be you need to be aware of the following restrictions:
    </p>
    <list>
      <li>
        Attached files and <a href="https://www.jetbrains.com/help/datalore/use-reactive-mode.html">Reactive mode</a>
        do not work due to Fargate's security policies.
      </li>
    </list>
  </chapter>
  <chapter title="Further steps" id="further-steps">
    <p>
      Once you have your Datalore installation up and running, you need to configure it for your workload and needs.
    </p>
    <procedure title="Required configuration procedures" type="steps" id="required-configuration-procedures">
      <step>
        <a href="https://www.jetbrains.com/help/datalore/configure-docker-agents.html">
          Configure agents
        </a>:
        customize how your agents work to manage your computational resources.
      </step>
      <step>
        <a href="https://www.jetbrains.com/help/datalore/set-up-gpu-machines.html">Set up GPU machines</a>:
        enable GPU machines in your installation.
      </step>
      <step>
        <a href="manage-users.topic">Create users</a>:
        create and manage users and viewers.
      </step>
      <step>
        <a href="https://www.jetbrains.com/help/datalore/configure-plans-docker.html">
          Configure plans
        </a>:
        customize resource usage among your Datalore users.
      </step>
    </procedure>
    <procedure title="Optional configuration procedures" type="choices" id="optional-configuration-procedures">
      <step>
        <a href="https://www.jetbrains.com/help/datalore/customize-or-update-environment.html">
          Customize or update environment
        </a>:
        create multiple base environments out of custom Docker images.
      </step>
      <step>
        <a href="https://www.jetbrains.com/help/datalore/use-hub-for-docker-installation.html">
          Set up JetBrains Hub
        </a>: integrate an authentication service.
      </step>
      <step>
        <a href="https://www.jetbrains.com/help/datalore/enable-gift-codes-docker.html">
          Enable gift codes
        </a>: enable a service generating and distributing gift codes.
      </step>
      <step>
        <a href="https://www.jetbrains.com/help/datalore/enable-email-service-docker.html">
          Enable email service
        </a>: activate email notifications.
      </step>
      <step>
        <a href="https://www.jetbrains.com/help/datalore/enable-user-activity-logging-docker-installation.html">
          Enable user activity logging
        </a>: set up auditing your Datalore users.
      </step>
    </procedure>
  </chapter>
</topic>
